
[gcode_macro Config_Backup_Github]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True
#bürste abwischen
[gcode_macro DUESE_ABWISCHEN]
gcode:
    G90
    G1 Z20                                                                                ; Düse anheben
    M117 Düse abwischen...                                                                ; Fortschrittsanzeigen auf Display
    G1 X636 Y45 F15000                                                                    ; Über Bürste fahren
    G1 Z16                                                                                 ; Z in Bürste absenken
    G1 X636 Y40 F1000                                                                     ; nach hinten wischen
    G1 X636 Y0 F1000                                                                      ;  nach vorne wischen
    G1 X636 Y40 F1000                                                                     ; nach hinten wischen
    G1 Z20                                                                              ; Düse aus Bürste fahren
    G1 X320 Y50 F15000 
    M117 Düse abgewischt! ; LCD 

#Tronxy eingefügt

[gcode_macro END_PRINT]
gcode:
    M117 Druck abgeschlossen!
    # Heizungen aus
    M140 S0
    M104 S0
    M106 S0
    # Düse nach hinten fahren wenn Druck fertig
    G91
    G1 X-0 Y-0 E-3 F300
    G90                                                                                   
    G1 X{printer.toolhead.axis_maximum.x/0} Y{printer.toolhead.axis_maximum.y0} F6000
    G91 Z100 F600
    #SET_LED LED=NEOPIXEL RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=1
    #SET_LED LED=NEOPIXEL RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=2
    #SET_LED LED=NEOPIXEL RED=0 GREEN=0 BLUE=0 WHITE=0 INDEX=3
    G90
    #G1 Z490 F900
    G91

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(50)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(240)|float %}
    M117 Bett aufheizen...
    M140 S{BED_TEMP}
    #NEOPIXEL_DISPLAY LED="NEOPIXEL" TYPE=bed_temp MODE=glow
    M190 S{BED_TEMP}
    M117 Düse vorwaermen...
    M109 S150
    M117 Achsen nullen...
    G28
    M117 Bett kippen...
    Z_TILT_ADJUST
    Z_TILT_ADJUST
    DUESE_ABWISCHEN
    M117 Achsen nullen...
    G28 Z
    M117 Achsen nullen...
    M117 Adaptive_mesh_enable
    M117 Bedmesh wird erstellt... (ca. 4 min)
    BED_MESH_CALIBRATE
    M117 Achsen nullen...
    G1 X60 Y60 F10000
    M117 Düse wird aufgeheizt...
    M109 S{EXTRUDER_TEMP}
    #NEOPIXEL_DISPLAY LED="NEOPIXEL" TYPE=extruder_temp MODE=glow
    DUESE_ABWISCHEN
    M117 LINE_PURGE
    M117 Druckvorgang läuft...
    #SET_LED LED=NEOPIXEL RED=1.0 GREEN=0 BLUE=0 WHITE=0 INDEX=1
    #SET_LED LED=NEOPIXEL RED=0 GREEN=0 BLUE=0 WHITE=1 INDEX=2
    #SET_LED LED=NEOPIXEL RED=0 GREEN=0 BLUE=0 WHITE=1 INDEX=3


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop 

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; z hop variable setzen
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; hotend temperatur aus gcode lesen
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; aktuelle position für resume speichern
        BASE_PAUSE                                                                           ; Druck pausieren
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; prüfen dass zhop nicht größer maximal z
            G91                                                                              ; relative positionierung
            G1 Z{z} F900                                                                     ; z heben um zhop 
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; wenn zhop nicht möglich, warnung
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positionierung
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; Stealthburner vorne in der mitte parken
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; position speichern falls stealthburner bewegt wird
        M104 S0                                                                              ; hotend aus
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; motortimeoutaktiv für 12 stunden
        M117 Pause, Warten auf Filament
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    {% set e = params.E|default(2.5)|int %}                                                 ; hotend spülen

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}         ; motortimeout resetten
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                               ; warte auf hotend temperatur
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                            ; zurück zur parkpostion filamentwechsel
        G91                                                                                 ; relative positionierung
        M83                                                                                 ; extruder relativ positionieren
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                       ; Düse spülem, Z zurück runter
        {% else %}
            G1 Z{zhop * -1} F900                                                            ; falls hotend kalt, nicht spülen
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                                 ; position wiederherstellen
        BASE_RESUME                                                                         ; weiter drucken
    {% endif %}

[gcode_macro Z_Kalibrieren]
gcode:
    M117 Z Kalibrieren...
    G28 X Y
    G28 Z
    PROBE_CALIBRATE
    M117 Z kalibriert!

[gcode_macro HOME_TILT_HEAT_MESH]
gcode:
    G28 X
    G28 Y
    G28 Z
    M190 S50
    M109 S200
    DUESE_ABWISCHEN
    G28 Z
    Z_TILT_ADJUST
    G28 Z
    DUESE_ABWISCHEN
    BED_MESH_CALIBRATE
    G1 X235 Y215 Z25

[gcode_macro Schrauben_Einstellen]
gcode:
    M117 Bett aufheizen zum leveln...
    G28 X
    G28 Y
    G28 Z
    M190 S50
    M109 S150
    M117 Homing... 
    G28 Z
    M117 Düse reinigen...
    DUESE_ABWISCHEN
    M117 Bett tilten...
    Z_TILT_ADJUST
    G28 Z
    SCREWS_TILT_CALCULATE
    M140 S0 
    M104 S0
    M117 Heizungen aus...

[gcode_macro Speichern]
gcode:
    SAVE_CONFIG

[gcode_macro M109]
rename_existing: M99109
gcode:
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}                   ; hotend temp setzen
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}                    ; auf hotend temp warten
    {% endif %}

[gcode_macro INPUTSHAPER_KALIBRIEREN]
gcode:
  G28 X
  G28 Y
  G28 Z
  Z_TILT_ADJUST
  G28 Z
  SHAPER_CALIBRATE

#Tronxy ende
# All customizations are documented in globals.cfg. Just copy a variable from
# there into the section below, and change the value to meet your needs.

[gcode_macro _km_options]
# These are examples of some likely customizations:
# Any sheets in the below list will be available with a configurable offset.
#variable_bed_surfaces: ['smooth_1','texture_1']
# Length (in mm) of filament to load (bowden tubes will be longer).
#variable_load_length: 90.0
# Hide the Octoprint LCD menu since I don't use it.
#variable_menu_show_octoprint: False
# Customize the filament menus (up to 10 entries).
#variable_menu_temperature: [
#  {'name' : 'PLA',  'extruder' : 200.0, 'bed' : 60.0},
#  {'name' : 'PETG', 'extruder' : 230.0, 'bed' : 85.0},
#  {'name' : 'ABS',  'extruder' : 245.0, 'bed' : 110.0, 'chamber' : 60}]
# Length of filament (in millimeters) to purge at print start.
#variable_start_purge_length: 30 # This value works for most setups.
gcode: # This line is required by Klipper.
# Any code you put here will run at klipper startup, after the initialization
# for these macros. For example, you could uncomment the following line to
# automatically adjust your bed surface offsets to account for any changes made
# to your Z endstop or probe offset.
#  ADJUST_SURFACE_OFFSETS

# This line includes all the standard macros.
[include klipper-macros/*.cfg]
# Uncomment to include features that require specific hardware support.
# LCD menu support for features like bed surface selection and pause next layer.
#[include klipper-macros/optional/lcd_menus.cfg]
# Optimized bed leveling
#[include klipper-macros/optional/bed_mesh.cfg]

# The sections below here are required for the macros to work. If your config
# already has some of these sections you should merge the duplicates into one
# (or if they are identical just remove one of them).
[idle_timeout]
gcode:
  _KM_IDLE_TIMEOUT # This line must be in your idle_timeout section.

[pause_resume]

[respond]

[save_variables]
filename: ~/printer_data/variables.cfg # UPDATE THIS FOR YOUR PATH!!!

[virtual_sdcard]
path: ~/gcode_files # UPDATE THIS FOR YOUR PATH!!!
on_error_gcode: CANCEL_PRINT

[display_status]